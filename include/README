
робочий на платах ESP8266
 * подвійний контроль роботи інкубатора через WEB_server, E_maill, локальний сервер XAMPP
 * 
 * створено WEB_інтерфейс для управління і контролю параметрів інкубатора 
 * зміна параметрів контролю
 * управління 2 релейними модулями (світла і камери)
 * робота в режимі станції і точки доступу одночасно
 * центральний платовий світлодіод включений лише при активації командою /incubatorControl 
 * 
 * модуль показує за адресою 192.168.0.111 - сторінку з даними для тих приладів, що підключені до однієї з ним 
 * мережі WiFi
 * 
 * не працює і проблеми
 * запис у пам'ять параметрів не відповідає при їх прочитанні після перезаавантаження
 * на головній сторінці модуля за адресою 192.168.0.101 не робочі посилання
 * при їх завантаженні модуль перезагружається. Якщо залишити сторінку відкритою - то перезавантажуться періодично на довжину циклу в 
 * записати і доставати з пам'яті адресу для першого підключення до точки доступу самої плати
 * для внесення ssid1 (ssis2,ssid2)  і паролей до них для роботи можливості віддаленого контролю інкубатора
 * через telegram, e-mail, сайт Timcon
 * 
 *  запис у пам'ять усіх параметрів контролю та даних (даних про власника: телефон, e-mail, login TIMCON) 
 * - не відпрацьована зі дані не записуються правильно
  запис у пам'ять мереж (3) для WiFi і паролей до них для підключення до інтернету - не запам'ятовується
 * запис токіна і chat_ID для контролю параметрів через телеграм бот
 * 
*/
/*
This directory is intended for project header files.

A header file is a file containing C declarations and macro definitions
to be shared between several project source files. You request the use of a
header file in your project source file (C, C++, etc) located in `src` folder
by including it, with the C preprocessing directive `#include'.

```src/main.c

#include "header.h"

int main (void)
{
 ...
}
```

Including a header file produces the same results as copying the header file
into each source file that needs it. Such copying would be time-consuming
and error-prone. With a header file, the related declarations appear
in only one place. If they need to be changed, they can be changed in one
place, and programs that include the header file will automatically use the
new version when next recompiled. The header file eliminates the labor of
finding and changing all the copies as well as the risk that a failure to
find one copy will result in inconsistencies within a program.

In C, the usual convention is to give header files names that end with `.h'.
It is most portable to use only letters, digits, dashes, and underscores in
header file names, and at most one dot.

Read more about using header files in official GCC documentation:

* Include Syntax
* Include Operation
* Once-Only Headers
* Computed Includes

https://gcc.gnu.org/onlinedocs/cpp/Header-Files.html
